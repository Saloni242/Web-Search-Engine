https://www.geeksforgeeks.org/number-of-factors-of-very-large-number-n-modulo-m-where-m-is-any-prime-number/ Number of factors of very large number N modulo M where M is any prime number - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Find a pair (n,r) in an integer array such that value of nPr is maximum Minimum increment or decrement operations required to make the array sorted Longest Increasing Subsequence using Longest Common Subsequence Algorithm Minimize the cost of partitioning an array into K groups Find a pair (n,r) in an integer array such that value of nCr is maximum Maximize the Expression | Bit Manipulation Minimum number of additons to make the string balanced Blowfish Algorithm with Examples Count number of Special Set Sentinel Linear Search Check whether two strings can be made equal by copying their characters with the adjacent ones Queries to find the left-most given type integer in a binary array Number of factors of very large number N modulo M where M is any prime number Given a large number N, the task is to find the total number of factors of the number N modulo M where M is any prime number. Examples: Input: N = 9699690, M = 17 Output: 1 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Input: N = 193748576239475639, M = 9 Output: 8 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Recommended: Please try your approach on {IDE} first, before moving on to the solution. Definition of Factors of a number: In mathematics, a factor of an integer N also called a divisor of N, is an integer M that may be multiplied by some integer to produce N. Any number can be written as: N = (P1A1) * (P2A2) * (P3A3) …. (PnAn) where P1, P2, P3…Pn are distinct prime and A1, A2, A3…An are number of times the corresponding prime number occurs. The general formula of total number of factors of a given number will be: Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) where A1, A2, A3, … An are count of distinct prime factors of N. Here Sieve’s implementation to find prime factorization of a large number cannot be used because it requires proportional space. Approach: Count the number of times 2 is the factor of the given number N. Iterate from 3 to √(N) to find the number of times a prime number divides a particular number which reduces every time by N / i. Divide number N by its corresponding smallest prime factor till N becomes 1. Find the number of factors of the number by using the formula Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) Below is the implementation of the above approach. C++ filter_none edit close play_arrow link brightness_4 code // C++ implmentation to find the // Number of factors of very // large number N modulo M #include <bits/stdc++.h> using namespace std; #define ll long long ll mod = 1000000007; // Function for modular // multiplication ll mult(ll a, ll b) { return ((a % mod) * (b % mod)) % mod; } // Funcion to find the number // of factors of large Number N ll calculate_factors(ll n) { ll ans, cnt; cnt = 0; ans = 1; // Count the number of times // 2 divides the number N while (n % 2 == 0) { cnt++; n = n / 2; } // Condition to check // if 2 divides it if (cnt) { ans = mult(ans, (cnt + 1)); } // Check for all the possible // numbers that can divide it for (int i = 3; i <= sqrt(n); i += 2) { cnt = 0; // Loop to check the number // of times prime number // i divides it while (n % i == 0) { cnt++; n = n / i; } // Condition to check if // prime number i divides it if (cnt) { ans = mult(ans, (cnt + 1)); } } // Condition to check if N // at the end is a prime number. if (n > 2) { ans = mult(ans, (2)); } return ans % mod; } // Driver Code int main() { ll n = 193748576239475639; mod = 17; cout << calculate_factors(n) << endl; return 0; } chevron_right filter_none Output: 
8
 My Personal Notes arrow_drop_up Save Recommended Posts: Number which has the maximum number of distinct prime factors in the range M to N Super Ugly Number (Number whose prime factors are in given set) Number with maximum number of prime factors Check if a number is Prime, Semi-Prime or Composite for very large numbers Primitive root of a prime number n modulo n Prime factors of a big number Find the number of primitive roots modulo prime Sum of Factors of a Number using Prime Factorization Maximum number of unique prime factors Number of steps to convert to prime factors Product of unique prime factors of a number Check if all Prime factors of number N are unique or not Number of distinct prime factors of first n natural numbers C Program for efficiently print all prime factors of a given number Efficient program to print all prime factors of a given number Subash23 Check out this Author's contributed articles. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please Improve this article if you find anything incorrect by clicking on the "Improve Article" button below. Article Tags : Algorithms Data Structures Mathematical prime-factor Practice Tags : Data Structures Mathematical Algorithms thumb_up Be the First to upvote. To-do Done 0 No votes yet. Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page Why Prim’s and Kruskal’s MST algorithm fails for Directed Graph? Next last_page Minimum change in given value so that it lies in all given Ranges Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Best Books to Learn Back-End Web Development Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? Most visited in Data Structures Print nodes having maximum and minimum degrees Minimum value to be assigned to the elements so that sum becomes greater than initial sum Difference between Linear and Non-linear Data Structures Skewed Binary Tree Find maximum count of duplicate nodes in a Binary Search Tree ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/number-of-factors-of-very-large-number-n-modulo-m-where-m-is-any-prime-number/ Number of factors of very large number N modulo M where M is any prime number - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Find a pair (n,r) in an integer array such that value of nPr is maximum Minimum increment or decrement operations required to make the array sorted Longest Increasing Subsequence using Longest Common Subsequence Algorithm Minimize the cost of partitioning an array into K groups Find a pair (n,r) in an integer array such that value of nCr is maximum Maximize the Expression | Bit Manipulation Minimum number of additons to make the string balanced Blowfish Algorithm with Examples Count number of Special Set Sentinel Linear Search Check whether two strings can be made equal by copying their characters with the adjacent ones Queries to find the left-most given type integer in a binary array Number of factors of very large number N modulo M where M is any prime number Given a large number N, the task is to find the total number of factors of the number N modulo M where M is any prime number. Examples: Input: N = 9699690, M = 17 Output: 1 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Input: N = 193748576239475639, M = 9 Output: 8 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Recommended: Please try your approach on {IDE} first, before moving on to the solution. Definition of Factors of a number: In mathematics, a factor of an integer N also called a divisor of N, is an integer M that may be multiplied by some integer to produce N. Any number can be written as: N = (P1A1) * (P2A2) * (P3A3) …. (PnAn) where P1, P2, P3…Pn are distinct prime and A1, A2, A3…An are number of times the corresponding prime number occurs. The general formula of total number of factors of a given number will be: Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) where A1, A2, A3, … An are count of distinct prime factors of N. Here Sieve’s implementation to find prime factorization of a large number cannot be used because it requires proportional space. Approach: Count the number of times 2 is the factor of the given number N. Iterate from 3 to √(N) to find the number of times a prime number divides a particular number which reduces every time by N / i. Divide number N by its corresponding smallest prime factor till N becomes 1. Find the number of factors of the number by using the formula Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) Below is the implementation of the above approach. C++ filter_none edit close play_arrow link brightness_4 code // C++ implmentation to find the // Number of factors of very // large number N modulo M #include <bits/stdc++.h> using namespace std; #define ll long long ll mod = 1000000007; // Function for modular // multiplication ll mult(ll a, ll b) { return ((a % mod) * (b % mod)) % mod; } // Funcion to find the number // of factors of large Number N ll calculate_factors(ll n) { ll ans, cnt; cnt = 0; ans = 1; // Count the number of times // 2 divides the number N while (n % 2 == 0) { cnt++; n = n / 2; } // Condition to check // if 2 divides it if (cnt) { ans = mult(ans, (cnt + 1)); } // Check for all the possible // numbers that can divide it for (int i = 3; i <= sqrt(n); i += 2) { cnt = 0; // Loop to check the number // of times prime number // i divides it while (n % i == 0) { cnt++; n = n / i; } // Condition to check if // prime number i divides it if (cnt) { ans = mult(ans, (cnt + 1)); } } // Condition to check if N // at the end is a prime number. if (n > 2) { ans = mult(ans, (2)); } return ans % mod; } // Driver Code int main() { ll n = 193748576239475639; mod = 17; cout << calculate_factors(n) << endl; return 0; } chevron_right filter_none Output: 
8
 My Personal Notes arrow_drop_up Save Recommended Posts: Number which has the maximum number of distinct prime factors in the range M to N Super Ugly Number (Number whose prime factors are in given set) Number with maximum number of prime factors Check if a number is Prime, Semi-Prime or Composite for very large numbers Primitive root of a prime number n modulo n Prime factors of a big number Find the number of primitive roots modulo prime Sum of Factors of a Number using Prime Factorization Maximum number of unique prime factors Number of steps to convert to prime factors Product of unique prime factors of a number Check if all Prime factors of number N are unique or not Number of distinct prime factors of first n natural numbers C Program for efficiently print all prime factors of a given number Efficient program to print all prime factors of a given number Subash23 Check out this Author's contributed articles. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please Improve this article if you find anything incorrect by clicking on the "Improve Article" button below. Article Tags : Algorithms Data Structures Mathematical prime-factor Practice Tags : Data Structures Mathematical Algorithms thumb_up Be the First to upvote. To-do Done 0 No votes yet. Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page Why Prim’s and Kruskal’s MST algorithm fails for Directed Graph? Next last_page Minimum change in given value so that it lies in all given Ranges Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Best Books to Learn Back-End Web Development Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? Most visited in Data Structures Print nodes having maximum and minimum degrees Minimum value to be assigned to the elements so that sum becomes greater than initial sum Difference between Linear and Non-linear Data Structures Skewed Binary Tree Find maximum count of duplicate nodes in a Binary Search Tree ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/number-of-factors-of-very-large-number-n-modulo-m-where-m-is-any-prime-number/ Number of factors of very large number N modulo M where M is any prime number - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Find a pair (n,r) in an integer array such that value of nPr is maximum Minimum increment or decrement operations required to make the array sorted Longest Increasing Subsequence using Longest Common Subsequence Algorithm Minimize the cost of partitioning an array into K groups Find a pair (n,r) in an integer array such that value of nCr is maximum Maximize the Expression | Bit Manipulation Minimum number of additons to make the string balanced Blowfish Algorithm with Examples Count number of Special Set Sentinel Linear Search Check whether two strings can be made equal by copying their characters with the adjacent ones Queries to find the left-most given type integer in a binary array Number of factors of very large number N modulo M where M is any prime number Given a large number N, the task is to find the total number of factors of the number N modulo M where M is any prime number. Examples: Input: N = 9699690, M = 17 Output: 1 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Input: N = 193748576239475639, M = 9 Output: 8 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Recommended: Please try your approach on {IDE} first, before moving on to the solution. Definition of Factors of a number: In mathematics, a factor of an integer N also called a divisor of N, is an integer M that may be multiplied by some integer to produce N. Any number can be written as: N = (P1A1) * (P2A2) * (P3A3) …. (PnAn) where P1, P2, P3…Pn are distinct prime and A1, A2, A3…An are number of times the corresponding prime number occurs. The general formula of total number of factors of a given number will be: Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) where A1, A2, A3, … An are count of distinct prime factors of N. Here Sieve’s implementation to find prime factorization of a large number cannot be used because it requires proportional space. Approach: Count the number of times 2 is the factor of the given number N. Iterate from 3 to √(N) to find the number of times a prime number divides a particular number which reduces every time by N / i. Divide number N by its corresponding smallest prime factor till N becomes 1. Find the number of factors of the number by using the formula Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) Below is the implementation of the above approach. C++ filter_none edit close play_arrow link brightness_4 code // C++ implmentation to find the // Number of factors of very // large number N modulo M #include <bits/stdc++.h> using namespace std; #define ll long long ll mod = 1000000007; // Function for modular // multiplication ll mult(ll a, ll b) { return ((a % mod) * (b % mod)) % mod; } // Funcion to find the number // of factors of large Number N ll calculate_factors(ll n) { ll ans, cnt; cnt = 0; ans = 1; // Count the number of times // 2 divides the number N while (n % 2 == 0) { cnt++; n = n / 2; } // Condition to check // if 2 divides it if (cnt) { ans = mult(ans, (cnt + 1)); } // Check for all the possible // numbers that can divide it for (int i = 3; i <= sqrt(n); i += 2) { cnt = 0; // Loop to check the number // of times prime number // i divides it while (n % i == 0) { cnt++; n = n / i; } // Condition to check if // prime number i divides it if (cnt) { ans = mult(ans, (cnt + 1)); } } // Condition to check if N // at the end is a prime number. if (n > 2) { ans = mult(ans, (2)); } return ans % mod; } // Driver Code int main() { ll n = 193748576239475639; mod = 17; cout << calculate_factors(n) << endl; return 0; } chevron_right filter_none Output: 
8
 My Personal Notes arrow_drop_up Save Recommended Posts: Number which has the maximum number of distinct prime factors in the range M to N Super Ugly Number (Number whose prime factors are in given set) Number with maximum number of prime factors Check if a number is Prime, Semi-Prime or Composite for very large numbers Primitive root of a prime number n modulo n Prime factors of a big number Find the number of primitive roots modulo prime Sum of Factors of a Number using Prime Factorization Maximum number of unique prime factors Number of steps to convert to prime factors Product of unique prime factors of a number Check if all Prime factors of number N are unique or not Number of distinct prime factors of first n natural numbers C Program for efficiently print all prime factors of a given number Efficient program to print all prime factors of a given number Subash23 Check out this Author's contributed articles. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please Improve this article if you find anything incorrect by clicking on the "Improve Article" button below. Article Tags : Algorithms Data Structures Mathematical prime-factor Practice Tags : Data Structures Mathematical Algorithms thumb_up Be the First to upvote. To-do Done 0 No votes yet. Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page Why Prim’s and Kruskal’s MST algorithm fails for Directed Graph? Next last_page Minimum change in given value so that it lies in all given Ranges Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Best Books to Learn Back-End Web Development Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? Most visited in Data Structures Print nodes having maximum and minimum degrees Minimum value to be assigned to the elements so that sum becomes greater than initial sum Difference between Linear and Non-linear Data Structures Skewed Binary Tree Find maximum count of duplicate nodes in a Binary Search Tree ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/number-of-factors-of-very-large-number-n-modulo-m-where-m-is-any-prime-number/ Number of factors of very large number N modulo M where M is any prime number - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Find a pair (n,r) in an integer array such that value of nPr is maximum Minimum increment or decrement operations required to make the array sorted Longest Increasing Subsequence using Longest Common Subsequence Algorithm Minimize the cost of partitioning an array into K groups Find a pair (n,r) in an integer array such that value of nCr is maximum Maximize the Expression | Bit Manipulation Minimum number of additons to make the string balanced Blowfish Algorithm with Examples Count number of Special Set Sentinel Linear Search Check whether two strings can be made equal by copying their characters with the adjacent ones Queries to find the left-most given type integer in a binary array Number of factors of very large number N modulo M where M is any prime number Given a large number N, the task is to find the total number of factors of the number N modulo M where M is any prime number. Examples: Input: N = 9699690, M = 17 Output: 1 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Input: N = 193748576239475639, M = 9 Output: 8 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Recommended: Please try your approach on {IDE} first, before moving on to the solution. Definition of Factors of a number: In mathematics, a factor of an integer N also called a divisor of N, is an integer M that may be multiplied by some integer to produce N. Any number can be written as: N = (P1A1) * (P2A2) * (P3A3) …. (PnAn) where P1, P2, P3…Pn are distinct prime and A1, A2, A3…An are number of times the corresponding prime number occurs. The general formula of total number of factors of a given number will be: Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) where A1, A2, A3, … An are count of distinct prime factors of N. Here Sieve’s implementation to find prime factorization of a large number cannot be used because it requires proportional space. Approach: Count the number of times 2 is the factor of the given number N. Iterate from 3 to √(N) to find the number of times a prime number divides a particular number which reduces every time by N / i. Divide number N by its corresponding smallest prime factor till N becomes 1. Find the number of factors of the number by using the formula Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) Below is the implementation of the above approach. C++ filter_none edit close play_arrow link brightness_4 code // C++ implmentation to find the // Number of factors of very // large number N modulo M #include <bits/stdc++.h> using namespace std; #define ll long long ll mod = 1000000007; // Function for modular // multiplication ll mult(ll a, ll b) { return ((a % mod) * (b % mod)) % mod; } // Funcion to find the number // of factors of large Number N ll calculate_factors(ll n) { ll ans, cnt; cnt = 0; ans = 1; // Count the number of times // 2 divides the number N while (n % 2 == 0) { cnt++; n = n / 2; } // Condition to check // if 2 divides it if (cnt) { ans = mult(ans, (cnt + 1)); } // Check for all the possible // numbers that can divide it for (int i = 3; i <= sqrt(n); i += 2) { cnt = 0; // Loop to check the number // of times prime number // i divides it while (n % i == 0) { cnt++; n = n / i; } // Condition to check if // prime number i divides it if (cnt) { ans = mult(ans, (cnt + 1)); } } // Condition to check if N // at the end is a prime number. if (n > 2) { ans = mult(ans, (2)); } return ans % mod; } // Driver Code int main() { ll n = 193748576239475639; mod = 17; cout << calculate_factors(n) << endl; return 0; } chevron_right filter_none Output: 
8
 My Personal Notes arrow_drop_up Save Recommended Posts: Number which has the maximum number of distinct prime factors in the range M to N Super Ugly Number (Number whose prime factors are in given set) Number with maximum number of prime factors Check if a number is Prime, Semi-Prime or Composite for very large numbers Primitive root of a prime number n modulo n Prime factors of a big number Find the number of primitive roots modulo prime Sum of Factors of a Number using Prime Factorization Maximum number of unique prime factors Number of steps to convert to prime factors Product of unique prime factors of a number Check if all Prime factors of number N are unique or not Number of distinct prime factors of first n natural numbers C Program for efficiently print all prime factors of a given number Efficient program to print all prime factors of a given number Subash23 Check out this Author's contributed articles. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please Improve this article if you find anything incorrect by clicking on the "Improve Article" button below. Article Tags : Algorithms Data Structures Mathematical prime-factor Practice Tags : Data Structures Mathematical Algorithms thumb_up Be the First to upvote. To-do Done 0 No votes yet. Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page Why Prim’s and Kruskal’s MST algorithm fails for Directed Graph? Next last_page Minimum change in given value so that it lies in all given Ranges Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Best Books to Learn Back-End Web Development Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? Most visited in Data Structures Print nodes having maximum and minimum degrees Minimum value to be assigned to the elements so that sum becomes greater than initial sum Difference between Linear and Non-linear Data Structures Skewed Binary Tree Find maximum count of duplicate nodes in a Binary Search Tree ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/number-of-factors-of-very-large-number-n-modulo-m-where-m-is-any-prime-number/ Number of factors of very large number N modulo M where M is any prime number - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Find a pair (n,r) in an integer array such that value of nPr is maximum Minimum increment or decrement operations required to make the array sorted Longest Increasing Subsequence using Longest Common Subsequence Algorithm Minimize the cost of partitioning an array into K groups Find a pair (n,r) in an integer array such that value of nCr is maximum Maximize the Expression | Bit Manipulation Minimum number of additons to make the string balanced Blowfish Algorithm with Examples Count number of Special Set Sentinel Linear Search Check whether two strings can be made equal by copying their characters with the adjacent ones Queries to find the left-most given type integer in a binary array Number of factors of very large number N modulo M where M is any prime number Given a large number N, the task is to find the total number of factors of the number N modulo M where M is any prime number. Examples: Input: N = 9699690, M = 17 Output: 1 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Input: N = 193748576239475639, M = 9 Output: 8 Explanation: Total Number of factors of 9699690 is 256 and (256 % 17) = 1 Recommended: Please try your approach on {IDE} first, before moving on to the solution. Definition of Factors of a number: In mathematics, a factor of an integer N also called a divisor of N, is an integer M that may be multiplied by some integer to produce N. Any number can be written as: N = (P1A1) * (P2A2) * (P3A3) …. (PnAn) where P1, P2, P3…Pn are distinct prime and A1, A2, A3…An are number of times the corresponding prime number occurs. The general formula of total number of factors of a given number will be: Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) where A1, A2, A3, … An are count of distinct prime factors of N. Here Sieve’s implementation to find prime factorization of a large number cannot be used because it requires proportional space. Approach: Count the number of times 2 is the factor of the given number N. Iterate from 3 to √(N) to find the number of times a prime number divides a particular number which reduces every time by N / i. Divide number N by its corresponding smallest prime factor till N becomes 1. Find the number of factors of the number by using the formula Factors = (1+A1) * (1+A2) * (1+A3) * … (1+An) Below is the implementation of the above approach. C++ filter_none edit close play_arrow link brightness_4 code // C++ implmentation to find the // Number of factors of very // large number N modulo M #include <bits/stdc++.h> using namespace std; #define ll long long ll mod = 1000000007; // Function for modular // multiplication ll mult(ll a, ll b) { return ((a % mod) * (b % mod)) % mod; } // Funcion to find the number // of factors of large Number N ll calculate_factors(ll n) { ll ans, cnt; cnt = 0; ans = 1; // Count the number of times // 2 divides the number N while (n % 2 == 0) { cnt++; n = n / 2; } // Condition to check // if 2 divides it if (cnt) { ans = mult(ans, (cnt + 1)); } // Check for all the possible // numbers that can divide it for (int i = 3; i <= sqrt(n); i += 2) { cnt = 0; // Loop to check the number // of times prime number // i divides it while (n % i == 0) { cnt++; n = n / i; } // Condition to check if // prime number i divides it if (cnt) { ans = mult(ans, (cnt + 1)); } } // Condition to check if N // at the end is a prime number. if (n > 2) { ans = mult(ans, (2)); } return ans % mod; } // Driver Code int main() { ll n = 193748576239475639; mod = 17; cout << calculate_factors(n) << endl; return 0; } chevron_right filter_none Output: 
8
 My Personal Notes arrow_drop_up Save Recommended Posts: Number which has the maximum number of distinct prime factors in the range M to N Super Ugly Number (Number whose prime factors are in given set) Number with maximum number of prime factors Check if a number is Prime, Semi-Prime or Composite for very large numbers Primitive root of a prime number n modulo n Prime factors of a big number Find the number of primitive roots modulo prime Sum of Factors of a Number using Prime Factorization Maximum number of unique prime factors Number of steps to convert to prime factors Product of unique prime factors of a number Check if all Prime factors of number N are unique or not Number of distinct prime factors of first n natural numbers C Program for efficiently print all prime factors of a given number Efficient program to print all prime factors of a given number Subash23 Check out this Author's contributed articles. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please Improve this article if you find anything incorrect by clicking on the "Improve Article" button below. Article Tags : Algorithms Data Structures Mathematical prime-factor Practice Tags : Data Structures Mathematical Algorithms thumb_up Be the First to upvote. To-do Done 0 No votes yet. Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page Why Prim’s and Kruskal’s MST algorithm fails for Directed Graph? Next last_page Minimum change in given value so that it lies in all given Ranges Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Best Books to Learn Back-End Web Development Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? Most visited in Data Structures Print nodes having maximum and minimum degrees Minimum value to be assigned to the elements so that sum becomes greater than initial sum Difference between Linear and Non-linear Data Structures Skewed Binary Tree Find maximum count of duplicate nodes in a Binary Search Tree ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reserved