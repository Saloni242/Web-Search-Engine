http://www.geeksforgeeks.org/stack-data-structure/ Stack Data Structure - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Stack Data Structure Recent articles on Stack Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out). There are many real-life examples of a stack. Consider an example of plates stacked over one another in the canteen. The plate which is at the top is the first one to be removed, i.e. the plate which has been placed at the bottommost position remains in the stack for the longest period of time. So, it can be simply seen to follow LIFO(Last In First Out)/FILO(First In Last Out) order. Topics : Introduction Design and Implementation Standard Problems Operations on Stack Misc Quick Links Introduction : Introduction to Stack Stack in C++ STL Stack Class in Java Stack in Python Stack in C# Design and Implementation : Implement Queue using Stacks Design and Implement Special Stack Data Structure | Added Space Optimized Version Implement two stacks in an array Implement Stack using Queues Design a stack with operations on middle element How to efficiently implement k stacks in a single array? How to create mergable stack? Design a stack that supports getMin() in O(1) time and O(1) extra space Implement a stack using single queue How to implement stack using priority queue or heap? Create a customized data structure which evaluates functions in O(1) Implement Stack and Queue using Deque Standard Problems based on Stack : Infix to Postfix Conversion using Stack Prefix to Infix Conversion Prefix to Postfix Conversion Postfix to Prefix Conversion Postfix to Infix Convert Infix To Prefix Notation The Stock Span Problem Check for balanced parentheses in an expression Next Greater Element Next Greater Frequency Element Number of NGEs to the right Maximum product of indexes of next greater on left and right The Celebrity Problem Expression Evaluation Arithmetic Expression Evalution Evaluation of Postfix Expression Iterative Tower of Hanoi Print next greater number of Q queries Operations on Stack : Reverse a stack using recursion Sort a stack using recursion Sort a stack using a temporary stack Reverse a stack without using extra space in O(n) Delete middle element of a stack Sorting array using Stacks Delete array elements which are smaller than next or become smaller Check if a queue can be sorted into another queue using a stack Reverse individual words Count subarrays where second highest lie before highest Check if an array is stack sortable Misc : Iterative Postorder Traversal | Set 1 (Using Two Stacks) Iterative Postorder Traversal | Set 2 (Using One Stack) Merge Overlapping Intervals Largest Rectangular Area in a Histogram | Set 2 Print ancestors of a given binary tree node without recursion Reverse a string using stack Program for Tower of Hanoi Find maximum depth of nested parenthesis in a string Find maximum of minimum for every window size in a given array Length of the longest valid substring Iterative Depth First Traversal of Graph Minimum number of bracket reversals needed to make an expression balanced Expression contains redundant bracket or not Identify and mark unmatched parenthesis in an expression Check if two expressions with brackets are same Find index of closing bracket for a given opening bracket in an expression Check for balanced parentheses in an expression Balanced expression with replacement Check if a given array can represent Preorder Traversal of Binary Search Tree Form minimum number from given sequence Find if an expression has duplicate parenthesis or not Find maximum difference between nearest left and right smaller elements Find next Smaller of next Greater in an array Find maximum sum possible equal sum of three stacks Count natural numbers whose all permutation are greater than that number Delete consecutive same words in a sequence Decode a string recursively encoded as count followed by substring Bubble sort using two Stacks Pattern Occurrences : Stack Implementation Java Iterative method to find ancestors of a given binary tree Stack Permutations (Check if an array is stack permutation of other) Tracking current Maximum Element in a Stack Check mirror in n-ary tree Reverse a number using stack Reversing the first K elements of a Queue Reversing a Queue Check if stack elements are pairwise consecutive Spaghetti Stack Interleave the first half of the queue with second half Remove brackets from an algebraic string containing + and – operators Growable array based stack Range Queries for Longest Correct Bracket Subsequence Quick Links : ‘Practice Problems’ on Stack ‘Videos’ on Stack ‘Quizzes’ on Stack Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/stack-data-structure/ Stack Data Structure - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Stack Data Structure Recent articles on Stack Stack is a linear data structure which follows a particular order in which the operations are performed. The order may be LIFO(Last In First Out) or FILO(First In Last Out). There are many real-life examples of a stack. Consider an example of plates stacked over one another in the canteen. The plate which is at the top is the first one to be removed, i.e. the plate which has been placed at the bottommost position remains in the stack for the longest period of time. So, it can be simply seen to follow LIFO(Last In First Out)/FILO(First In Last Out) order. Topics : Introduction Design and Implementation Standard Problems Operations on Stack Misc Quick Links Introduction : Introduction to Stack Stack in C++ STL Stack Class in Java Stack in Python Stack in C# Design and Implementation : Implement Queue using Stacks Design and Implement Special Stack Data Structure | Added Space Optimized Version Implement two stacks in an array Implement Stack using Queues Design a stack with operations on middle element How to efficiently implement k stacks in a single array? How to create mergable stack? Design a stack that supports getMin() in O(1) time and O(1) extra space Implement a stack using single queue How to implement stack using priority queue or heap? Create a customized data structure which evaluates functions in O(1) Implement Stack and Queue using Deque Standard Problems based on Stack : Infix to Postfix Conversion using Stack Prefix to Infix Conversion Prefix to Postfix Conversion Postfix to Prefix Conversion Postfix to Infix Convert Infix To Prefix Notation The Stock Span Problem Check for balanced parentheses in an expression Next Greater Element Next Greater Frequency Element Number of NGEs to the right Maximum product of indexes of next greater on left and right The Celebrity Problem Expression Evaluation Arithmetic Expression Evalution Evaluation of Postfix Expression Iterative Tower of Hanoi Print next greater number of Q queries Operations on Stack : Reverse a stack using recursion Sort a stack using recursion Sort a stack using a temporary stack Reverse a stack without using extra space in O(n) Delete middle element of a stack Sorting array using Stacks Delete array elements which are smaller than next or become smaller Check if a queue can be sorted into another queue using a stack Reverse individual words Count subarrays where second highest lie before highest Check if an array is stack sortable Misc : Iterative Postorder Traversal | Set 1 (Using Two Stacks) Iterative Postorder Traversal | Set 2 (Using One Stack) Merge Overlapping Intervals Largest Rectangular Area in a Histogram | Set 2 Print ancestors of a given binary tree node without recursion Reverse a string using stack Program for Tower of Hanoi Find maximum depth of nested parenthesis in a string Find maximum of minimum for every window size in a given array Length of the longest valid substring Iterative Depth First Traversal of Graph Minimum number of bracket reversals needed to make an expression balanced Expression contains redundant bracket or not Identify and mark unmatched parenthesis in an expression Check if two expressions with brackets are same Find index of closing bracket for a given opening bracket in an expression Check for balanced parentheses in an expression Balanced expression with replacement Check if a given array can represent Preorder Traversal of Binary Search Tree Form minimum number from given sequence Find if an expression has duplicate parenthesis or not Find maximum difference between nearest left and right smaller elements Find next Smaller of next Greater in an array Find maximum sum possible equal sum of three stacks Count natural numbers whose all permutation are greater than that number Delete consecutive same words in a sequence Decode a string recursively encoded as count followed by substring Bubble sort using two Stacks Pattern Occurrences : Stack Implementation Java Iterative method to find ancestors of a given binary tree Stack Permutations (Check if an array is stack permutation of other) Tracking current Maximum Element in a Stack Check mirror in n-ary tree Reverse a number using stack Reversing the first K elements of a Queue Reversing a Queue Check if stack elements are pairwise consecutive Spaghetti Stack Interleave the first half of the queue with second half Remove brackets from an algebraic string containing + and – operators Growable array based stack Range Queries for Longest Correct Bracket Subsequence Quick Links : ‘Practice Problems’ on Stack ‘Videos’ on Stack ‘Quizzes’ on Stack Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reserved