https://www.geeksforgeeks.org/difference-between-preemptive-and-non-preemptive-cpu-scheduling-algorithms/ Difference between Preemptive and Non-preemptive CPU scheduling algorithms - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Difference between C and C# Difference between Inheritance and Polymorphism Difference between Function and Procedure Difference between Abstraction and Encapsulation in C++ Difference between General tree and Binary tree Difference between Secure Socket Layer (SSL) and Secure Electronic Transaction (SET) Difference between Linear and Non-linear Data Structures Difference between Method Overloading and Method Overriding in Java Difference between Concurrency and Parallelism Difference between Python and C# Difference between RDBMS and Hive Difference between Single and Multiple Inheritance in C++ Difference between Information and Knowledge Difference between LED and LCD Difference between SVG and JPEG Difference between Tester and SDET Difference between Public and Private in C++ with Example Difference between Mirroring and Replication Difference between Positive Testing and Negative Testing Difference between Software Testing and Embedded Testing Difference between Traditional and Agile Software Development Difference between Iterator and Enumeration in Java with Examples Difference between Preemptive and Non-preemptive CPU scheduling algorithms In CPU Scheduling, we have two types of scheduling, Let’s have a look at them: Preemptive Scheduling: In this, a scheduler may preempt a low priority running process anytime when a high priority process enters into a ready state. When scheduling takes from either of below circumstances it is preemptive scheduling – When a process switches from the running state to the ready state (for example, when an interrupt occurs). When a process switches from the waiting state to the ready state (for example, at completion of I/)). Non-Preemptive Scheduling: In this, once a process enters the running state it cannot be preempted until it completes it’s allocation time. When scheduling takes place only under below circumstances we say that the scheduling scheme is non-preemptive or cooperative. – When a process switches from the running state to the waiting state (for example, as the result of an I/O request or an invocation of wait() for the termination of a child process). When a process terminates. Let’s see the difference between Preemptive Scheduling and Non-Preemptive Scheduling: S.No. Preemptive Scheduling Non-Preemptive Scheduling 1. The CPU is allocated to the processes for a certain amount of time. The CPU is allocated to the process till it ends it’s execution or switches to waiting state. 2. The executing process here is interrupted in the middle of execution. The executing process here is not interrupted in the middle of execution. 3. It usually switches the process from ready state to running state, vise-versa, and maintains the ready queue. It does not switch the process from running state to ready state. 4. Here, if a process with high priority frequently arrives in the ready queue then the process with low priority has to wait for long, and it may have to starve. Here, if CPU is allocated to the process with larger burst time then the processes with small burst time may have to starve. 5. It is quite flexible because the critical processes are allowed to access CPU as they arrive into the ready queue, no matter what process is executing currently. It is rigid as even if a critical process enters the ready queue the process running CPU is not disturbed. 6. This is cost associative as it has to maintain the integrity of shared data. This is not cost associative. Preemptive scheduling is better than non-preemptive scheduling or vise-versa can’t be said definitely. It depends on how a scheduling minimizes the average waiting time of the processes and maximizes CPU utilization. My Personal Notes arrow_drop_up Save Recommended Posts: Preemptive and Non-Preemptive Scheduling First Come, First Serve – CPU Scheduling | (Non-preemptive) Program for Preemptive Priority CPU Scheduling Program for Shortest Job First (SJF) scheduling | Set 2 (Preemptive) Program for Shortest Job First (or SJF) CPU Scheduling | Set 1 (Non- preemptive) Shortest Job First (or SJF) CPU Scheduling Non-preemptive algorithm using Segment Tree Disk Scheduling Algorithms Difference between First Come First Served (FCFS) and Round Robin (RR) Scheduling Algorithm Difference between Seek Time and Rotational Latency in Disk Scheduling FCFS Disk Scheduling Algorithms Advantages and Disadvantages of various CPU scheduling algorithms SCAN (Elevator) Disk Scheduling Algorithms Multilevel Feedback Queue Scheduling (MLFQ) CPU Scheduling Difference between Turn Around Time (TAT) and Waiting Time (WT) in CPU Scheduling Difference between Seek Time and Disk Access Time in Disk Scheduling imarchit19 Check out this Author's contributed articles. If you like GeeksforGeeks and would like to contribute, you can also write an article using contribute.geeksforgeeks.org or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks. Please Improve this article if you find anything incorrect by clicking on the "Improve Article" button below. Article Tags : Difference Between GATE CS Operating Systems cpu-scheduling Practice Tags : Operating Systems thumb_up Be the First to upvote. To-do Done 0 No votes yet. Please write to us at contribute@geeksforgeeks.org to report any issue with the above content. Post navigation Previous first_page Difference between Hardwired and Microprogrammed Control Unit Next last_page Design Issues in Network Layer Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most popular articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Impact of IoT on CyberSecurity Best Books to Learn Back-End Web Development Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? Most visited in GATE CS C-LOOK Disk Scheduling Algorithm Variation of Turing Machine Which is better, the GRE or the GATE? Basic Blocks in Compiler Design Semantic Analysis in Compiler Design ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reserved