https://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/#rl Theory Of Computation and Automata Tutorials - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Theory Of Computation and Automata Tutorials Recent Articles on Theory Of Computation Introduction Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Pushdown Automata Turing Machine Decidability Quick Links Introduction : Introduction of Theory of Computation Chomsky Hierarchy Applications of various Automata Regular Languages and Finite Automata : Finite Automata Introduction Arden’s Theorem and Challenging Applications | Set 2 L-graphs and what they represent Hypothesis (language regularity) and algorithm (L-graph to NFA) Regular Expressions,Regular Grammar and Regular Languages How to identify if a language is regular or not Arden’s Theorem Finite Automata from Regular Expressions Star Height of Regular Expression and Regular Language Generating regular expression from finite automata Designing Deterministic Finite Automata (Set 1) Designing Deterministic Finite Automata (Set 2) DFA for Strings not ending with “THE” DFA of a string with at least two 0’s and at least two 1’s DFA for accepting the language L = { anbm | n+m=even } DFA machines accepting odd number of 0’s or/and even number of 1’s DFA of a string in which 2nd symbol from RHS is ‘a’ Union process in DFA Concatenation process in DFA DFA in LEX code which accepts even number of zeros and even number of ones. NFA to DFA Conversion Program to Implement NFA with epsilon move to DFA Conversion Minimization of DFA Reversal process in DFA Complementation process in DFA Kleene’s Theorem Part-1 MEALY and MOORE Machines Difference between Mealy machine and Moore machine >> Practice problems on finite automata >> Practice problems on finite automata | Set 2 >> Quiz on Regular Languages and Finite Automata Context Free Grammar and Context Free Languages : Relationship between grammar and language Simplifying Context Free Grammars Closure Properties of Context Free Languages(CFL) Union & Intersection of Regular languages with CFL Converting Context Free Grammar to Chomsky Normal Form Converting Context Free Grammar to Greibach Normal Form Pumping Lemma Check if the language is Context Free or Not Ambiguity in Context Free Grammar Operator grammar and precedence parser Context-sensitive Grammar (CSG) and Language (CSL) Pushdown Automata : Pushdown Automata Pushdown Automata Acceptance by Final State Construct Pushdown Automata for given languages Construct Pushdown Automata for all length palindrome Detailed Study of PushDown Automata NPDA for accepting the language L = {an bm cn| m,n>=1} NPDA for accepting the language L = {an bn cm | m,n>=1} NPDA for accepting the language L = {anbn | n>=1} NPDA for accepting the language L = {am b(2m) | m>=1} NPDA for accepting the language L = {am bn cp dq| m+n=p+q ; m,n,p,q>=1} Construct Pushdown automata for L = {0n1m2m3n | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for accepting the language L = {ambnc(n+m) | m,n ? 1} NPDA for accepting the language L = {amb(n+m)cn| m,n ? 1} NPDA for accepting the language L = {a2mb3m | m ? 1} NPDA for accepting the language L = {amb(2m+1) | m ? 1} NPDA for accepting the language L = {aibjckdl | i==k or j==l,i>=1,j>=1} Construct Pushdown automata for L = {a(2*m)c(4*n)dnbm | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for L = {0i1j2k | i==j or j==k ; i , j , k >= 1} NPDA for accepting the language L = {anb(2n) | n>=1} U {anbn | n>=1} NPDA for the language L ={w?{a,b}*| w contains equal no. of a’s and b’s} >> Quiz on Context Free Languages and Pushdown Automata Turing Machine : Turing Machine Turing Machine for addition Turing machine for subtraction | Set 1 Turing machine for multiplication Turing machine for copying data Construct a Turing Machine for language L = {0n1n2n | n?1} Construct a Turing Machine for language L = {wwr | w ? {0, 1}} Construct a Turing Machine for language L = {ww | w ? {0,1}} Construct Turing machine for L = {anbma(n+m) | n,m?1} Construct a Turing machine for L = {aibjck | i*j = k; i, j, k ? 1} Turing machine for 1’s and 2’s complement Recursive and Recursive Enumerable Languages Turing Machine for subtraction | Set 2 Halting Problem Theory of Computation | Applications of various Automata Turing Machine as Comparator >> Quiz on Turing Machines and Recursively Enumerable Sets Decidability : Decidable and undecidable problems Decidability Undecidability and Reducibility NP-Completeness | Set 1 (Introduction) Proof that Hamiltonian Path is NP-Complete Proof that vertex cover is NP complete Computable and non-computable problems >> Quiz on Undecidability Quick Links : Last Minute Notes(LMNs) ‘Quizzes’ on Theory Of Computation ! ‘Practice Problems’ on Theory of Computation ! Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/#cfl Theory Of Computation and Automata Tutorials - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Theory Of Computation and Automata Tutorials Recent Articles on Theory Of Computation Introduction Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Pushdown Automata Turing Machine Decidability Quick Links Introduction : Introduction of Theory of Computation Chomsky Hierarchy Applications of various Automata Regular Languages and Finite Automata : Finite Automata Introduction Arden’s Theorem and Challenging Applications | Set 2 L-graphs and what they represent Hypothesis (language regularity) and algorithm (L-graph to NFA) Regular Expressions,Regular Grammar and Regular Languages How to identify if a language is regular or not Arden’s Theorem Finite Automata from Regular Expressions Star Height of Regular Expression and Regular Language Generating regular expression from finite automata Designing Deterministic Finite Automata (Set 1) Designing Deterministic Finite Automata (Set 2) DFA for Strings not ending with “THE” DFA of a string with at least two 0’s and at least two 1’s DFA for accepting the language L = { anbm | n+m=even } DFA machines accepting odd number of 0’s or/and even number of 1’s DFA of a string in which 2nd symbol from RHS is ‘a’ Union process in DFA Concatenation process in DFA DFA in LEX code which accepts even number of zeros and even number of ones. NFA to DFA Conversion Program to Implement NFA with epsilon move to DFA Conversion Minimization of DFA Reversal process in DFA Complementation process in DFA Kleene’s Theorem Part-1 MEALY and MOORE Machines Difference between Mealy machine and Moore machine >> Practice problems on finite automata >> Practice problems on finite automata | Set 2 >> Quiz on Regular Languages and Finite Automata Context Free Grammar and Context Free Languages : Relationship between grammar and language Simplifying Context Free Grammars Closure Properties of Context Free Languages(CFL) Union & Intersection of Regular languages with CFL Converting Context Free Grammar to Chomsky Normal Form Converting Context Free Grammar to Greibach Normal Form Pumping Lemma Check if the language is Context Free or Not Ambiguity in Context Free Grammar Operator grammar and precedence parser Context-sensitive Grammar (CSG) and Language (CSL) Pushdown Automata : Pushdown Automata Pushdown Automata Acceptance by Final State Construct Pushdown Automata for given languages Construct Pushdown Automata for all length palindrome Detailed Study of PushDown Automata NPDA for accepting the language L = {an bm cn| m,n>=1} NPDA for accepting the language L = {an bn cm | m,n>=1} NPDA for accepting the language L = {anbn | n>=1} NPDA for accepting the language L = {am b(2m) | m>=1} NPDA for accepting the language L = {am bn cp dq| m+n=p+q ; m,n,p,q>=1} Construct Pushdown automata for L = {0n1m2m3n | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for accepting the language L = {ambnc(n+m) | m,n ? 1} NPDA for accepting the language L = {amb(n+m)cn| m,n ? 1} NPDA for accepting the language L = {a2mb3m | m ? 1} NPDA for accepting the language L = {amb(2m+1) | m ? 1} NPDA for accepting the language L = {aibjckdl | i==k or j==l,i>=1,j>=1} Construct Pushdown automata for L = {a(2*m)c(4*n)dnbm | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for L = {0i1j2k | i==j or j==k ; i , j , k >= 1} NPDA for accepting the language L = {anb(2n) | n>=1} U {anbn | n>=1} NPDA for the language L ={w?{a,b}*| w contains equal no. of a’s and b’s} >> Quiz on Context Free Languages and Pushdown Automata Turing Machine : Turing Machine Turing Machine for addition Turing machine for subtraction | Set 1 Turing machine for multiplication Turing machine for copying data Construct a Turing Machine for language L = {0n1n2n | n?1} Construct a Turing Machine for language L = {wwr | w ? {0, 1}} Construct a Turing Machine for language L = {ww | w ? {0,1}} Construct Turing machine for L = {anbma(n+m) | n,m?1} Construct a Turing machine for L = {aibjck | i*j = k; i, j, k ? 1} Turing machine for 1’s and 2’s complement Recursive and Recursive Enumerable Languages Turing Machine for subtraction | Set 2 Halting Problem Theory of Computation | Applications of various Automata Turing Machine as Comparator >> Quiz on Turing Machines and Recursively Enumerable Sets Decidability : Decidable and undecidable problems Decidability Undecidability and Reducibility NP-Completeness | Set 1 (Introduction) Proof that Hamiltonian Path is NP-Complete Proof that vertex cover is NP complete Computable and non-computable problems >> Quiz on Undecidability Quick Links : Last Minute Notes(LMNs) ‘Quizzes’ on Theory Of Computation ! ‘Practice Problems’ on Theory of Computation ! Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/ Theory Of Computation and Automata Tutorials - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Theory Of Computation and Automata Tutorials Recent Articles on Theory Of Computation Introduction Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Pushdown Automata Turing Machine Decidability Quick Links Introduction : Introduction of Theory of Computation Chomsky Hierarchy Applications of various Automata Regular Languages and Finite Automata : Finite Automata Introduction Arden’s Theorem and Challenging Applications | Set 2 L-graphs and what they represent Hypothesis (language regularity) and algorithm (L-graph to NFA) Regular Expressions,Regular Grammar and Regular Languages How to identify if a language is regular or not Arden’s Theorem Finite Automata from Regular Expressions Star Height of Regular Expression and Regular Language Generating regular expression from finite automata Designing Deterministic Finite Automata (Set 1) Designing Deterministic Finite Automata (Set 2) DFA for Strings not ending with “THE” DFA of a string with at least two 0’s and at least two 1’s DFA for accepting the language L = { anbm | n+m=even } DFA machines accepting odd number of 0’s or/and even number of 1’s DFA of a string in which 2nd symbol from RHS is ‘a’ Union process in DFA Concatenation process in DFA DFA in LEX code which accepts even number of zeros and even number of ones. NFA to DFA Conversion Program to Implement NFA with epsilon move to DFA Conversion Minimization of DFA Reversal process in DFA Complementation process in DFA Kleene’s Theorem Part-1 MEALY and MOORE Machines Difference between Mealy machine and Moore machine >> Practice problems on finite automata >> Practice problems on finite automata | Set 2 >> Quiz on Regular Languages and Finite Automata Context Free Grammar and Context Free Languages : Relationship between grammar and language Simplifying Context Free Grammars Closure Properties of Context Free Languages(CFL) Union & Intersection of Regular languages with CFL Converting Context Free Grammar to Chomsky Normal Form Converting Context Free Grammar to Greibach Normal Form Pumping Lemma Check if the language is Context Free or Not Ambiguity in Context Free Grammar Operator grammar and precedence parser Context-sensitive Grammar (CSG) and Language (CSL) Pushdown Automata : Pushdown Automata Pushdown Automata Acceptance by Final State Construct Pushdown Automata for given languages Construct Pushdown Automata for all length palindrome Detailed Study of PushDown Automata NPDA for accepting the language L = {an bm cn| m,n>=1} NPDA for accepting the language L = {an bn cm | m,n>=1} NPDA for accepting the language L = {anbn | n>=1} NPDA for accepting the language L = {am b(2m) | m>=1} NPDA for accepting the language L = {am bn cp dq| m+n=p+q ; m,n,p,q>=1} Construct Pushdown automata for L = {0n1m2m3n | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for accepting the language L = {ambnc(n+m) | m,n ? 1} NPDA for accepting the language L = {amb(n+m)cn| m,n ? 1} NPDA for accepting the language L = {a2mb3m | m ? 1} NPDA for accepting the language L = {amb(2m+1) | m ? 1} NPDA for accepting the language L = {aibjckdl | i==k or j==l,i>=1,j>=1} Construct Pushdown automata for L = {a(2*m)c(4*n)dnbm | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for L = {0i1j2k | i==j or j==k ; i , j , k >= 1} NPDA for accepting the language L = {anb(2n) | n>=1} U {anbn | n>=1} NPDA for the language L ={w?{a,b}*| w contains equal no. of a’s and b’s} >> Quiz on Context Free Languages and Pushdown Automata Turing Machine : Turing Machine Turing Machine for addition Turing machine for subtraction | Set 1 Turing machine for multiplication Turing machine for copying data Construct a Turing Machine for language L = {0n1n2n | n?1} Construct a Turing Machine for language L = {wwr | w ? {0, 1}} Construct a Turing Machine for language L = {ww | w ? {0,1}} Construct Turing machine for L = {anbma(n+m) | n,m?1} Construct a Turing machine for L = {aibjck | i*j = k; i, j, k ? 1} Turing machine for 1’s and 2’s complement Recursive and Recursive Enumerable Languages Turing Machine for subtraction | Set 2 Halting Problem Theory of Computation | Applications of various Automata Turing Machine as Comparator >> Quiz on Turing Machines and Recursively Enumerable Sets Decidability : Decidable and undecidable problems Decidability Undecidability and Reducibility NP-Completeness | Set 1 (Introduction) Proof that Hamiltonian Path is NP-Complete Proof that vertex cover is NP complete Computable and non-computable problems >> Quiz on Undecidability Quick Links : Last Minute Notes(LMNs) ‘Quizzes’ on Theory Of Computation ! ‘Practice Problems’ on Theory of Computation ! Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttp://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/ Theory Of Computation and Automata Tutorials - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Theory Of Computation and Automata Tutorials Recent Articles on Theory Of Computation Introduction Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Pushdown Automata Turing Machine Decidability Quick Links Introduction : Introduction of Theory of Computation Chomsky Hierarchy Applications of various Automata Regular Languages and Finite Automata : Finite Automata Introduction Arden’s Theorem and Challenging Applications | Set 2 L-graphs and what they represent Hypothesis (language regularity) and algorithm (L-graph to NFA) Regular Expressions,Regular Grammar and Regular Languages How to identify if a language is regular or not Arden’s Theorem Finite Automata from Regular Expressions Star Height of Regular Expression and Regular Language Generating regular expression from finite automata Designing Deterministic Finite Automata (Set 1) Designing Deterministic Finite Automata (Set 2) DFA for Strings not ending with “THE” DFA of a string with at least two 0’s and at least two 1’s DFA for accepting the language L = { anbm | n+m=even } DFA machines accepting odd number of 0’s or/and even number of 1’s DFA of a string in which 2nd symbol from RHS is ‘a’ Union process in DFA Concatenation process in DFA DFA in LEX code which accepts even number of zeros and even number of ones. NFA to DFA Conversion Program to Implement NFA with epsilon move to DFA Conversion Minimization of DFA Reversal process in DFA Complementation process in DFA Kleene’s Theorem Part-1 MEALY and MOORE Machines Difference between Mealy machine and Moore machine >> Practice problems on finite automata >> Practice problems on finite automata | Set 2 >> Quiz on Regular Languages and Finite Automata Context Free Grammar and Context Free Languages : Relationship between grammar and language Simplifying Context Free Grammars Closure Properties of Context Free Languages(CFL) Union & Intersection of Regular languages with CFL Converting Context Free Grammar to Chomsky Normal Form Converting Context Free Grammar to Greibach Normal Form Pumping Lemma Check if the language is Context Free or Not Ambiguity in Context Free Grammar Operator grammar and precedence parser Context-sensitive Grammar (CSG) and Language (CSL) Pushdown Automata : Pushdown Automata Pushdown Automata Acceptance by Final State Construct Pushdown Automata for given languages Construct Pushdown Automata for all length palindrome Detailed Study of PushDown Automata NPDA for accepting the language L = {an bm cn| m,n>=1} NPDA for accepting the language L = {an bn cm | m,n>=1} NPDA for accepting the language L = {anbn | n>=1} NPDA for accepting the language L = {am b(2m) | m>=1} NPDA for accepting the language L = {am bn cp dq| m+n=p+q ; m,n,p,q>=1} Construct Pushdown automata for L = {0n1m2m3n | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for accepting the language L = {ambnc(n+m) | m,n ? 1} NPDA for accepting the language L = {amb(n+m)cn| m,n ? 1} NPDA for accepting the language L = {a2mb3m | m ? 1} NPDA for accepting the language L = {amb(2m+1) | m ? 1} NPDA for accepting the language L = {aibjckdl | i==k or j==l,i>=1,j>=1} Construct Pushdown automata for L = {a(2*m)c(4*n)dnbm | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for L = {0i1j2k | i==j or j==k ; i , j , k >= 1} NPDA for accepting the language L = {anb(2n) | n>=1} U {anbn | n>=1} NPDA for the language L ={w?{a,b}*| w contains equal no. of a’s and b’s} >> Quiz on Context Free Languages and Pushdown Automata Turing Machine : Turing Machine Turing Machine for addition Turing machine for subtraction | Set 1 Turing machine for multiplication Turing machine for copying data Construct a Turing Machine for language L = {0n1n2n | n?1} Construct a Turing Machine for language L = {wwr | w ? {0, 1}} Construct a Turing Machine for language L = {ww | w ? {0,1}} Construct Turing machine for L = {anbma(n+m) | n,m?1} Construct a Turing machine for L = {aibjck | i*j = k; i, j, k ? 1} Turing machine for 1’s and 2’s complement Recursive and Recursive Enumerable Languages Turing Machine for subtraction | Set 2 Halting Problem Theory of Computation | Applications of various Automata Turing Machine as Comparator >> Quiz on Turing Machines and Recursively Enumerable Sets Decidability : Decidable and undecidable problems Decidability Undecidability and Reducibility NP-Completeness | Set 1 (Introduction) Proof that Hamiltonian Path is NP-Complete Proof that vertex cover is NP complete Computable and non-computable problems >> Quiz on Undecidability Quick Links : Last Minute Notes(LMNs) ‘Quizzes’ on Theory Of Computation ! ‘Practice Problems’ on Theory of Computation ! Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reservedhttps://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/#tm Theory Of Computation and Automata Tutorials - GeeksforGeeks GeeksforGeeks x × Suggest a Topic Select a Category Advanced Computer Subject Advanced Data Structure Algorithms Algorithms Quiz Analysis AngularJS Aptitude Arrays Articles Articles Backtracking Binary Search Tree Bit Magic Bootstrap Branch and Bound C C Programs C Quiz C# C# Programs C++ C++ Programs C++ Quiz CAT Combinatorial Competitive Programming Compiler Design Compiler Design Computer Networks Computer Networks Quiz Computer Organization & Architecture Computer Organization and Architecture Computer Subject CS – Placements CSS Data Structures Data Structures DBMS DBMS Quiz Design Pattern DI – Placements Difference Between Digital Electronics & Logic Design Divide and Conquer Dynamic Programming Engineering Mathematics Engineering Mathematics Questions English – Placements Experienced Game Theory GATE GATE CS GBlog Geek on the Top GeeksforGeeks Initiatives GeeksQuiz Geometric GFacts Git Go Language Graph GRE GRE Quiz Greedy Hadoop Hash Heap HTML Internship Interview Experiences ISRO Java Java Programs Java Quiz JavaScript JQuery JS++ Julia Kotlin Linked List Linux-Unix Machine Learning Mathematical Matrix MCQ Misc Node.js Operating Systems Operating Systems Questions Pattern Searching Perl PHP PHP Programs Placements Program Output Programming Language Project Puzzles Python Python Programs Python-Quizzes QA – Placement Quizzes QA – Placements Queue Quizzes Randomized Reasoning – Placements Recursion Ruby Scala School Programming Searching Software Engineering Sorting SQL Stack Strings Technical Scripter TechTips test_cat_june Theory of Computation Theory of Computation & Automata Tree UGC-NET Web Technologies Web technologies Questions Write From Home Submit menu Skip to content Tutorials Algorithms Analysis of Algorithms Asymptotic Analysis Worst, Average and Best Cases Asymptotic Notations Little o and little omega notations Lower and Upper Bound Theory Analysis of Loops Solving Recurrences Amortized Analysis What does ‘Space Complexity’ mean? Pseudo-polynomial Algorithms Polynomial Time Approximation Scheme A Time Complexity Question Searching Algorithms Sorting Algorithms Graph Algorithms Pattern Searching Geometric Algorithms Mathematical Randomized Algorithms Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch and Bound All Algorithms Data Structures Arrays Linked List Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings All Data Structures Languages C C++ Java Python C# Javascript JQuery SQL PHP Scala Perl Go Language HTML CSS Kotlin Interview Corner Company Preparation Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes GATE GATE CS Notes 2020 Last Minute Notes GATE CS Solved Papers GATE CS Orignal Papers and Official Keys GATE 2020 Dates GATE CS 2020 Syllabus Important Topics for GATE CS Sudo GATE 2020 ISRO CS ISRO CS Solved Papers ISRO CS Original Papers and Official Keys ISRO CS Syllabus for Scientist/Engineer Exam UGC NET CS UGC NET CS Notes Paper II UGC NET CS Notes Paper III UGC NET CS Solved Papers CS Subjects Mathematics First Order Logic Combinatorics Set Theory Graph Theory Linear Algebra Probability Calculus Operating Systems Processes, threads, CPU scheduling Process Synchronization Deadlock Memory Management File and Disk Management DBMS Entity Relationship Model Relational Model Normalisation SQL Transactions and concurrency control Computer Networks Basics Data Link Layer Network layer Transport layer Application layer Network Security and Cryptography Computer Organization and Architecture Basics ALU, data‐path and control unit Pipelining Memory Organisation Input and Output Systems Theory of Computation Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Turing Machine Compiler Design Introduction Lexical Analysis Syntax Analysis Syntax Directed Translation Runtime Environments Code Generation and Optimization Digital Logic Boolean Algebra and Logic Gates Combinational Logic Circuits Flip-Flops and Sequential Circuits Software Engineering Introduction Software Development Models & Architecture Software Project Management Software Requirements Software Testing and Debugging Web Technologies HTML CSS JavaScript PHP JQuery Students Get Hired Campus Ambassador Program Project Geek of the Month Campus Geek of the Month Placement Course Competitive Programming Testimonials Geek on the Top Careers Internship Courses Home Algorithms expand_more All Algorithms Analysis of Algorithms Searching Algorithms Sorting Algorithms Graph Algorithms Bit Algorithms Pattern Searching Geometric Algorithms Mathematical Algorithms Randomized Algorithms Game Theory Greedy Algorithms Dynamic Programming Divide and Conquer Backtracking Branch & Bound Data Structures expand_more All Data Structures Array LinkedList Stack Queue Binary Tree Binary Search Tree Heap Hashing Graph Advanced Data Structure Matrix Strings Languages expand_more C C++ Java Python SQL PHP Javascript Program Output Interview expand_more Company Prep Top Topics Practice Company Questions Interview Experiences Experienced Interviews Internship Interviews Competitive Programming Design Patterns Multiple Choice Quizzes Students expand_more Campus Ambassador Program Geek of the Month Placement Course Project Competitive Programming Testimonials Geek on the Top Careers Internship School Programming GATE expand_more GATE CS Corner GATE Notes Last Minute Notes Official Papers Gate 2018 Important Dates and Links CS Subjects expand_more Operating Systems DBMS Computer Networks Compiler Design Web Technology Computer Organization & Architecture Digital Electronics Engg. Mathematics Theory of Computation Advanced Topics What’s Difference? Quizzes expand_more C C++ Java Python Data Structures Algorithms Operating Systems DBMS Compiler Design Computer Networks Theory of Computation Computer Organization Software Engineering HTML & XML Engg. Mathematics Aptitude GBlog Puzzles What’s New? Special 21 ▲ Write an Article Courses @ GeeksforGeeks Internships @ GeeksforGeeks Coding Practice How to write an Interview Experience? Must Do Coding Questions Company-wise Must Do Coding Questions Topic-wise Basic Easy Medium Hard Expert Step by Step Preparation Company Preparation Top Topics Company Specific Practice Software Design Patterns Placements Preparation Course Interview Corner Recent Interview Experiences GQ Home Page Quiz Corner LMNs What's New ? Leaderboard !! Topic-wise Practice Subjective Problems Difficulty Level - School Difficulty Level - Basic Difficulty Level - Easy Difficulty Level - Medium Difficulty Level - Hard Explore More... C C++ Java Python SQL PHP JavaScript School Programming Operating Systems DBMS Computer Networks Engineering Mathematics Design Patterns Common Interview Puzzles Web Technology G-Facts Computer Graphics Image Processing Project Ideas Theory Of Computation and Automata Tutorials Recent Articles on Theory Of Computation Introduction Regular Languages and Finite Automata Context Free Grammar and Context Free Languages Pushdown Automata Turing Machine Decidability Quick Links Introduction : Introduction of Theory of Computation Chomsky Hierarchy Applications of various Automata Regular Languages and Finite Automata : Finite Automata Introduction Arden’s Theorem and Challenging Applications | Set 2 L-graphs and what they represent Hypothesis (language regularity) and algorithm (L-graph to NFA) Regular Expressions,Regular Grammar and Regular Languages How to identify if a language is regular or not Arden’s Theorem Finite Automata from Regular Expressions Star Height of Regular Expression and Regular Language Generating regular expression from finite automata Designing Deterministic Finite Automata (Set 1) Designing Deterministic Finite Automata (Set 2) DFA for Strings not ending with “THE” DFA of a string with at least two 0’s and at least two 1’s DFA for accepting the language L = { anbm | n+m=even } DFA machines accepting odd number of 0’s or/and even number of 1’s DFA of a string in which 2nd symbol from RHS is ‘a’ Union process in DFA Concatenation process in DFA DFA in LEX code which accepts even number of zeros and even number of ones. NFA to DFA Conversion Program to Implement NFA with epsilon move to DFA Conversion Minimization of DFA Reversal process in DFA Complementation process in DFA Kleene’s Theorem Part-1 MEALY and MOORE Machines Difference between Mealy machine and Moore machine >> Practice problems on finite automata >> Practice problems on finite automata | Set 2 >> Quiz on Regular Languages and Finite Automata Context Free Grammar and Context Free Languages : Relationship between grammar and language Simplifying Context Free Grammars Closure Properties of Context Free Languages(CFL) Union & Intersection of Regular languages with CFL Converting Context Free Grammar to Chomsky Normal Form Converting Context Free Grammar to Greibach Normal Form Pumping Lemma Check if the language is Context Free or Not Ambiguity in Context Free Grammar Operator grammar and precedence parser Context-sensitive Grammar (CSG) and Language (CSL) Pushdown Automata : Pushdown Automata Pushdown Automata Acceptance by Final State Construct Pushdown Automata for given languages Construct Pushdown Automata for all length palindrome Detailed Study of PushDown Automata NPDA for accepting the language L = {an bm cn| m,n>=1} NPDA for accepting the language L = {an bn cm | m,n>=1} NPDA for accepting the language L = {anbn | n>=1} NPDA for accepting the language L = {am b(2m) | m>=1} NPDA for accepting the language L = {am bn cp dq| m+n=p+q ; m,n,p,q>=1} Construct Pushdown automata for L = {0n1m2m3n | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for accepting the language L = {ambnc(n+m) | m,n ? 1} NPDA for accepting the language L = {amb(n+m)cn| m,n ? 1} NPDA for accepting the language L = {a2mb3m | m ? 1} NPDA for accepting the language L = {amb(2m+1) | m ? 1} NPDA for accepting the language L = {aibjckdl | i==k or j==l,i>=1,j>=1} Construct Pushdown automata for L = {a(2*m)c(4*n)dnbm | m,n ? 0} Construct Pushdown automata for L = {0n1m2(n+m) | m,n ? 0} NPDA for L = {0i1j2k | i==j or j==k ; i , j , k >= 1} NPDA for accepting the language L = {anb(2n) | n>=1} U {anbn | n>=1} NPDA for the language L ={w?{a,b}*| w contains equal no. of a’s and b’s} >> Quiz on Context Free Languages and Pushdown Automata Turing Machine : Turing Machine Turing Machine for addition Turing machine for subtraction | Set 1 Turing machine for multiplication Turing machine for copying data Construct a Turing Machine for language L = {0n1n2n | n?1} Construct a Turing Machine for language L = {wwr | w ? {0, 1}} Construct a Turing Machine for language L = {ww | w ? {0,1}} Construct Turing machine for L = {anbma(n+m) | n,m?1} Construct a Turing machine for L = {aibjck | i*j = k; i, j, k ? 1} Turing machine for 1’s and 2’s complement Recursive and Recursive Enumerable Languages Turing Machine for subtraction | Set 2 Halting Problem Theory of Computation | Applications of various Automata Turing Machine as Comparator >> Quiz on Turing Machines and Recursively Enumerable Sets Decidability : Decidable and undecidable problems Decidability Undecidability and Reducibility NP-Completeness | Set 1 (Introduction) Proof that Hamiltonian Path is NP-Complete Proof that vertex cover is NP complete Computable and non-computable problems >> Quiz on Undecidability Quick Links : Last Minute Notes(LMNs) ‘Quizzes’ on Theory Of Computation ! ‘Practice Problems’ on Theory of Computation ! Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above. My Personal Notes arrow_drop_up Save Writing code in comment? Please use ide.geeksforgeeks.org, generate link and share the link here. Load Comments Most Popular Articles Must Do Coding Questions for Companies like Amazon, Microsoft, Adobe, ... Top Machine Learning Trends in 2019 How to Crack System Design Round in Interviews? What is Competitive Programming and How to Prepare for It? I don't like Coding. What should I do to Get a Job in IT? Most Visited Articles How to Become a Data Scientist in 2019: A Complete Guide How Does Google Use Machine Learning? Most asked Computer Science Subjects Interview Questions in Amazon, Microsoft, Flipkart How to Prepare for Amazon Software Development Engineering Interview? How Does NASA Use Machine Learning? ✍ Write a Testimonial ⇣ 5th Floor, A-118, Sector-136, Noida, Uttar Pradesh - 201305 feedback@geeksforgeeks.org COMPANY About Us Careers Privacy Policy Contact Us LEARN Algorithms Data Structures Languages CS Subjects Video Tutorials PRACTICE Courses Company-wise Topic-wise How to begin? CONTRIBUTE Write an Article Write Interview Experience Internships Videos @geeksforgeeks, Some rights reserved